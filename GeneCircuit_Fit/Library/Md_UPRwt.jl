dU_d0   = sU - (cB * U_d0 * B_d0) + (gUB * UB_d0) - (cD[1] * U_d0) + (cE * E_d0 * Ud_d0) + (gB * UB_d0)
dUB_d0  = (cB * U_d0 * B_d0) - (gUB * UB_d0) - (cD[1] * UB_d0) + (cE * E_d0 * UdB_d0) - (gB * UB_d0) - (gF * UB_d0)
dUd_d0  = - (cB * Ud_d0 * B_d0) + (gUB * UdB_d0) + (cD[1] * U_d0) - (cE * E_d0 * Ud_d0) + (gB * UdB_d0)
dUdB_d0 = (cB * Ud_d0 * B_d0) - (gUB * UdB_d0) + (cD[1] * UB_d0) - (cE * E_d0 * UdB_d0) - (gB * UdB_d0)
dI_d0   = mI - (gI * I_d0) - (cBI * B_d0 * I_d0) - (cA * (U_d0 + Ud_d0 + UdB_d0) * I_d0) + (gIB * IB_d0) + (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d0 ^ nI))) * Ia_d0)
dIB_d0  = - (gI * IB_d0) + (cBI * B_d0 * I_d0) - (gIB * IB_d0)
dIa_d0  = - (gI * Ia_d0) + (cA * (U_d0 + Ud_d0 + UdB_d0) * I_d0) - (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d0 ^ nI))) * Ia_d0)
dHu_d0  = bHu - (gHs * Hu_d0) - ((bHo * min(I_d0,Hu_d0)) + (bHs * min(Ia_d0,Hu_d0)))
dHs_d0  = - (gHs * Hs_d0) + ((bHo * min(I_d0,Hu_d0)) + (bHs * min(Ia_d0,Hu_d0)))
dBm_d0  = (bBm * (1 + (nB * (Hs_d0 ^ 2)/(a0 + (a1 * Hs_d0) + (Hs_d0 ^ 2))))) - (gBm * Bm_d0)
dB_d0   = (bB * Bm_d0) - (gB * B_d0) - (cB * U_d0 * B_d0) + (gUB * UB_d0) - (cB * Ud_d0 * B_d0) + (gUB * UdB_d0) + (gF * UB_d0) - (cBI * B_d0 * I_d0) + (gIB * IB_d0) + (gI * IB_d0)
dEm_d0  = (bEm * (1 + (nE * (Hs_d0 ^ 2)/(a0 + (a1 * Hs_d0) + (Hs_d0 ^ 2))))) - (gEm * Em_d0)
dE_d0   = (bE * Em_d0) - (gE * E_d0)
dRm_d0  = - (gHs * Rm_d0) + ((bHo * min(I_d0,Hu_d0)) + (bHs * min(Ia_d0,Hu_d0)))
dRs_d0  = (0.008333 * Rm_d0) - (0.00003472 * Rs_d0)
dU_d1   = sU - (cB * U_d1 * B_d1) + (gUB * UB_d1) - (cD[2] * U_d1) + (cE * E_d1 * Ud_d1) + (gB * UB_d1)
dUB_d1  = (cB * U_d1 * B_d1) - (gUB * UB_d1) - (cD[2] * UB_d1) + (cE * E_d1 * UdB_d1) - (gB * UB_d1) - (gF * UB_d1)
dUd_d1  = - (cB * Ud_d1 * B_d1) + (gUB * UdB_d1) + (cD[2] * U_d1) - (cE * E_d1 * Ud_d1) + (gB * UdB_d1)
dUdB_d1 = (cB * Ud_d1 * B_d1) - (gUB * UdB_d1) + (cD[2] * UB_d1) - (cE * E_d1 * UdB_d1) - (gB * UdB_d1)
dI_d1   = mI - (gI * I_d1) - (cBI * B_d1 * I_d1) - (cA * (U_d1 + Ud_d1 + UdB_d1) * I_d1) + (gIB * IB_d1) + (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d1 ^ nI))) * Ia_d1)
dIB_d1  = - (gI * IB_d1) + (cBI * B_d1 * I_d1) - (gIB * IB_d1)
dIa_d1  = - (gI * Ia_d1) + (cA * (U_d1 + Ud_d1 + UdB_d1) * I_d1) - (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d1 ^ nI))) * Ia_d1)
dHu_d1  = bHu - (gHs * Hu_d1) - ((bHo * min(I_d1,Hu_d1)) + (bHs * min(Ia_d1,Hu_d1)))
dHs_d1  = - (gHs * Hs_d1) + ((bHo * min(I_d1,Hu_d1)) + (bHs * min(Ia_d1,Hu_d1)))
dBm_d1  = (bBm * (1 + (nB * (Hs_d1 ^ 2)/(a0 + (a1 * Hs_d1) + (Hs_d1 ^ 2))))) - (gBm * Bm_d1)
dB_d1   = (bB * Bm_d1) - (gB * B_d1) - (cB * U_d1 * B_d1) + (gUB * UB_d1) - (cB * Ud_d1 * B_d1) + (gUB * UdB_d1) + (gF * UB_d1) - (cBI * B_d1 * I_d1) + (gIB * IB_d1) + (gI * IB_d1)
dEm_d1  = (bEm * (1 + (nE * (Hs_d1 ^ 2)/(a0 + (a1 * Hs_d1) + (Hs_d1 ^ 2))))) - (gEm * Em_d1)
dE_d1   = (bE * Em_d1) - (gE * E_d1)
dRm_d1  = - (gHs * Rm_d1) + ((bHo * min(I_d1,Hu_d1)) + (bHs * min(Ia_d1,Hu_d1)))
dRs_d1  = (0.008333 * Rm_d1) - (0.00003472 * Rs_d1)
dU_d2   = sU - (cB * U_d2 * B_d2) + (gUB * UB_d2) - (cD[3] * U_d2) + (cE * E_d2 * Ud_d2) + (gB * UB_d2)
dUB_d2  = (cB * U_d2 * B_d2) - (gUB * UB_d2) - (cD[3] * UB_d2) + (cE * E_d2 * UdB_d2) - (gB * UB_d2) - (gF * UB_d2)
dUd_d2  = - (cB * Ud_d2 * B_d2) + (gUB * UdB_d2) + (cD[3] * U_d2) - (cE * E_d2 * Ud_d2) + (gB * UdB_d2)
dUdB_d2 = (cB * Ud_d2 * B_d2) - (gUB * UdB_d2) + (cD[3] * UB_d2) - (cE * E_d2 * UdB_d2) - (gB * UdB_d2)
dI_d2   = mI - (gI * I_d2) - (cBI * B_d2 * I_d2) - (cA * (U_d2 + Ud_d2 + UdB_d2) * I_d2) + (gIB * IB_d2) + (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d2 ^ nI))) * Ia_d2)
dIB_d2  = - (gI * IB_d2) + (cBI * B_d2 * I_d2) - (gIB * IB_d2)
dIa_d2  = - (gI * Ia_d2) + (cA * (U_d2 + Ud_d2 + UdB_d2) * I_d2) - (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d2 ^ nI))) * Ia_d2)
dHu_d2  = bHu - (gHs * Hu_d2) - ((bHo * min(I_d2,Hu_d2)) + (bHs * min(Ia_d2,Hu_d2)))
dHs_d2  = - (gHs * Hs_d2) + ((bHo * min(I_d2,Hu_d2)) + (bHs * min(Ia_d2,Hu_d2)))
dBm_d2  = (bBm * (1 + (nB * (Hs_d2 ^ 2)/(a0 + (a1 * Hs_d2) + (Hs_d2 ^ 2))))) - (gBm * Bm_d2)
dB_d2   = (bB * Bm_d2) - (gB * B_d2) - (cB * U_d2 * B_d2) + (gUB * UB_d2) - (cB * Ud_d2 * B_d2) + (gUB * UdB_d2) + (gF * UB_d2) - (cBI * B_d2 * I_d2) + (gIB * IB_d2) + (gI * IB_d2)
dEm_d2  = (bEm * (1 + (nE * (Hs_d2 ^ 2)/(a0 + (a1 * Hs_d2) + (Hs_d2 ^ 2))))) - (gEm * Em_d2)
dE_d2   = (bE * Em_d2) - (gE * E_d2)
dRm_d2  = - (gHs * Rm_d2) + ((bHo * min(I_d2,Hu_d2)) + (bHs * min(Ia_d2,Hu_d2)))
dRs_d2  = (0.008333 * Rm_d2) - (0.00003472 * Rs_d2)
dU_d3   = sU - (cB * U_d3 * B_d3) + (gUB * UB_d3) - (cD[4] * U_d3) + (cE * E_d3 * Ud_d3) + (gB * UB_d3)
dUB_d3  = (cB * U_d3 * B_d3) - (gUB * UB_d3) - (cD[4] * UB_d3) + (cE * E_d3 * UdB_d3) - (gB * UB_d3) - (gF * UB_d3)
dUd_d3  = - (cB * Ud_d3 * B_d3) + (gUB * UdB_d3) + (cD[4] * U_d3) - (cE * E_d3 * Ud_d3) + (gB * UdB_d3)
dUdB_d3 = (cB * Ud_d3 * B_d3) - (gUB * UdB_d3) + (cD[4] * UB_d3) - (cE * E_d3 * UdB_d3) - (gB * UdB_d3)
dI_d3   = mI - (gI * I_d3) - (cBI * B_d3 * I_d3) - (cA * (U_d3 + Ud_d3 + UdB_d3) * I_d3) + (gIB * IB_d3) + (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d3 ^ nI))) * Ia_d3)
dIB_d3  = - (gI * IB_d3) + (cBI * B_d3 * I_d3) - (gIB * IB_d3)
dIa_d3  = - (gI * Ia_d3) + (cA * (U_d3 + Ud_d3 + UdB_d3) * I_d3) - (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d3 ^ nI))) * Ia_d3)
dHu_d3  = bHu - (gHs * Hu_d3) - ((bHo * min(I_d3,Hu_d3)) + (bHs * min(Ia_d3,Hu_d3)))
dHs_d3  = - (gHs * Hs_d3) + ((bHo * min(I_d3,Hu_d3)) + (bHs * min(Ia_d3,Hu_d3)))
dBm_d3  = (bBm * (1 + (nB * (Hs_d3 ^ 2)/(a0 + (a1 * Hs_d3) + (Hs_d3 ^ 2))))) - (gBm * Bm_d3)
dB_d3   = (bB * Bm_d3) - (gB * B_d3) - (cB * U_d3 * B_d3) + (gUB * UB_d3) - (cB * Ud_d3 * B_d3) + (gUB * UdB_d3) + (gF * UB_d3) - (cBI * B_d3 * I_d3) + (gIB * IB_d3) + (gI * IB_d3)
dEm_d3  = (bEm * (1 + (nE * (Hs_d3 ^ 2)/(a0 + (a1 * Hs_d3) + (Hs_d3 ^ 2))))) - (gEm * Em_d3)
dE_d3   = (bE * Em_d3) - (gE * E_d3)
dRm_d3  = - (gHs * Rm_d3) + ((bHo * min(I_d3,Hu_d3)) + (bHs * min(Ia_d3,Hu_d3)))
dRs_d3  = (0.008333 * Rm_d3) - (0.00003472 * Rs_d3)
dU_d4   = sU - (cB * U_d4 * B_d4) + (gUB * UB_d4) - (cD[5] * U_d4) + (cE * E_d4 * Ud_d4) + (gB * UB_d4)
dUB_d4  = (cB * U_d4 * B_d4) - (gUB * UB_d4) - (cD[5] * UB_d4) + (cE * E_d4 * UdB_d4) - (gB * UB_d4) - (gF * UB_d4)
dUd_d4  = - (cB * Ud_d4 * B_d4) + (gUB * UdB_d4) + (cD[5] * U_d4) - (cE * E_d4 * Ud_d4) + (gB * UdB_d4)
dUdB_d4 = (cB * Ud_d4 * B_d4) - (gUB * UdB_d4) + (cD[5] * UB_d4) - (cE * E_d4 * UdB_d4) - (gB * UdB_d4)
dI_d4   = mI - (gI * I_d4) - (cBI * B_d4 * I_d4) - (cA * (U_d4 + Ud_d4 + UdB_d4) * I_d4) + (gIB * IB_d4) + (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d4 ^ nI))) * Ia_d4)
dIB_d4  = - (gI * IB_d4) + (cBI * B_d4 * I_d4) - (gIB * IB_d4)
dIa_d4  = - (gI * Ia_d4) + (cA * (U_d4 + Ud_d4 + UdB_d4) * I_d4) - (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d4 ^ nI))) * Ia_d4)
dHu_d4  = bHu - (gHs * Hu_d4) - ((bHo * min(I_d4,Hu_d4)) + (bHs * min(Ia_d4,Hu_d4)))
dHs_d4  = - (gHs * Hs_d4) + ((bHo * min(I_d4,Hu_d4)) + (bHs * min(Ia_d4,Hu_d4)))
dBm_d4  = (bBm * (1 + (nB * (Hs_d4 ^ 2)/(a0 + (a1 * Hs_d4) + (Hs_d4 ^ 2))))) - (gBm * Bm_d4)
dB_d4   = (bB * Bm_d4) - (gB * B_d4) - (cB * U_d4 * B_d4) + (gUB * UB_d4) - (cB * Ud_d4 * B_d4) + (gUB * UdB_d4) + (gF * UB_d4) - (cBI * B_d4 * I_d4) + (gIB * IB_d4) + (gI * IB_d4)
dEm_d4  = (bEm * (1 + (nE * (Hs_d4 ^ 2)/(a0 + (a1 * Hs_d4) + (Hs_d4 ^ 2))))) - (gEm * Em_d4)
dE_d4   = (bE * Em_d4) - (gE * E_d4)
dRm_d4  = - (gHs * Rm_d4) + ((bHo * min(I_d4,Hu_d4)) + (bHs * min(Ia_d4,Hu_d4)))
dRs_d4  = (0.008333 * Rm_d4) - (0.00003472 * Rs_d4)
dU_d5   = sU - (cB * U_d5 * B_d5) + (gUB * UB_d5) - (cD[6] * U_d5) + (cE * E_d5 * Ud_d5) + (gB * UB_d5)
dUB_d5  = (cB * U_d5 * B_d5) - (gUB * UB_d5) - (cD[6] * UB_d5) + (cE * E_d5 * UdB_d5) - (gB * UB_d5) - (gF * UB_d5)
dUd_d5  = - (cB * Ud_d5 * B_d5) + (gUB * UdB_d5) + (cD[6] * U_d5) - (cE * E_d5 * Ud_d5) + (gB * UdB_d5)
dUdB_d5 = (cB * Ud_d5 * B_d5) - (gUB * UdB_d5) + (cD[6] * UB_d5) - (cE * E_d5 * UdB_d5) - (gB * UdB_d5)
dI_d5   = mI - (gI * I_d5) - (cBI * B_d5 * I_d5) - (cA * (U_d5 + Ud_d5 + UdB_d5) * I_d5) + (gIB * IB_d5) + (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d5 ^ nI))) * Ia_d5)
dIB_d5  = - (gI * IB_d5) + (cBI * B_d5 * I_d5) - (gIB * IB_d5)
dIa_d5  = - (gI * Ia_d5) + (cA * (U_d5 + Ud_d5 + UdB_d5) * I_d5) - (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d5 ^ nI))) * Ia_d5)
dHu_d5  = bHu - (gHs * Hu_d5) - ((bHo * min(I_d5,Hu_d5)) + (bHs * min(Ia_d5,Hu_d5)))
dHs_d5  = - (gHs * Hs_d5) + ((bHo * min(I_d5,Hu_d5)) + (bHs * min(Ia_d5,Hu_d5)))
dBm_d5  = (bBm * (1 + (nB * (Hs_d5 ^ 2)/(a0 + (a1 * Hs_d5) + (Hs_d5 ^ 2))))) - (gBm * Bm_d5)
dB_d5   = (bB * Bm_d5) - (gB * B_d5) - (cB * U_d5 * B_d5) + (gUB * UB_d5) - (cB * Ud_d5 * B_d5) + (gUB * UdB_d5) + (gF * UB_d5) - (cBI * B_d5 * I_d5) + (gIB * IB_d5) + (gI * IB_d5)
dEm_d5  = (bEm * (1 + (nE * (Hs_d5 ^ 2)/(a0 + (a1 * Hs_d5) + (Hs_d5 ^ 2))))) - (gEm * Em_d5)
dE_d5   = (bE * Em_d5) - (gE * E_d5)
dRm_d5  = - (gHs * Rm_d5) + ((bHo * min(I_d5,Hu_d5)) + (bHs * min(Ia_d5,Hu_d5)))
dRs_d5  = (0.008333 * Rm_d5) - (0.00003472 * Rs_d5)
dU_d6   = sU - (cB * U_d6 * B_d6) + (gUB * UB_d6) - (cD[7] * U_d6) + (cE * E_d6 * Ud_d6) + (gB * UB_d6)
dUB_d6  = (cB * U_d6 * B_d6) - (gUB * UB_d6) - (cD[7] * UB_d6) + (cE * E_d6 * UdB_d6) - (gB * UB_d6) - (gF * UB_d6)
dUd_d6  = - (cB * Ud_d6 * B_d6) + (gUB * UdB_d6) + (cD[7] * U_d6) - (cE * E_d6 * Ud_d6) + (gB * UdB_d6)
dUdB_d6 = (cB * Ud_d6 * B_d6) - (gUB * UdB_d6) + (cD[7] * UB_d6) - (cE * E_d6 * UdB_d6) - (gB * UdB_d6)
dI_d6   = mI - (gI * I_d6) - (cBI * B_d6 * I_d6) - (cA * (U_d6 + Ud_d6 + UdB_d6) * I_d6) + (gIB * IB_d6) + (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d6 ^ nI))) * Ia_d6)
dIB_d6  = - (gI * IB_d6) + (cBI * B_d6 * I_d6) - (gIB * IB_d6)
dIa_d6  = - (gI * Ia_d6) + (cA * (U_d6 + Ud_d6 + UdB_d6) * I_d6) - (gIA * ((kI ^ nI)/((kI ^ nI) + (Ia_d6 ^ nI))) * Ia_d6)
dHu_d6  = bHu - (gHs * Hu_d6) - ((bHo * min(I_d6,Hu_d6)) + (bHs * min(Ia_d6,Hu_d6)))
dHs_d6  = - (gHs * Hs_d6) + ((bHo * min(I_d6,Hu_d6)) + (bHs * min(Ia_d6,Hu_d6)))
dBm_d6  = (bBm * (1 + (nB * (Hs_d6 ^ 2)/(a0 + (a1 * Hs_d6) + (Hs_d6 ^ 2))))) - (gBm * Bm_d6)
dB_d6   = (bB * Bm_d6) - (gB * B_d6) - (cB * U_d6 * B_d6) + (gUB * UB_d6) - (cB * Ud_d6 * B_d6) + (gUB * UdB_d6) + (gF * UB_d6) - (cBI * B_d6 * I_d6) + (gIB * IB_d6) + (gI * IB_d6)
dEm_d6  = (bEm * (1 + (nE * (Hs_d6 ^ 2)/(a0 + (a1 * Hs_d6) + (Hs_d6 ^ 2))))) - (gEm * Em_d6)
dE_d6   = (bE * Em_d6) - (gE * E_d6)
dRm_d6  = - (gHs * Rm_d6) + ((bHo * min(I_d6,Hu_d6)) + (bHs * min(Ia_d6,Hu_d6)))
dRs_d6  = (0.008333 * Rm_d6) - (0.00003472 * Rs_d6)
